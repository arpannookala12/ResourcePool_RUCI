[
  {
    "objectID": "smsm.html",
    "href": "smsm.html",
    "title": "Spatial Microsimulation for Middlesex County, NJ",
    "section": "",
    "text": "# Python code here\n# Loading Required Libraries\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)"
  },
  {
    "objectID": "smsm.html#reading-the-individual-level-data",
    "href": "smsm.html#reading-the-individual-level-data",
    "title": "Spatial Microsimulation for Middlesex County, NJ",
    "section": "Reading the Individual Level Data",
    "text": "Reading the Individual Level Data\n\n# Read the Household Pulse Survey data from a CSV file\nind &lt;- read.csv(\"hps_04_00_01_puf.csv\")\n# Display the data\nhead(as.data.frame(ind))"
  },
  {
    "objectID": "smsm.html#data-filtering-and-variable-selection",
    "href": "smsm.html#data-filtering-and-variable-selection",
    "title": "Spatial Microsimulation for Middlesex County, NJ",
    "section": "Data Filtering and Variable Selection",
    "text": "Data Filtering and Variable Selection\n\n# Filter data for Middlesex County (EST_MSA=35620) and state of New Jersey (EST_ST=34)\nind &lt;- ind %&gt;% filter(EST_MSA==35620 & EST_ST==34)\n\n# Calculate Age from Birth Year\nind$AGE &lt;- 2024 - ind$TBIRTH_YEAR\n\n# Select variables of interest\nvariables_of_interest &lt;- c(\"EST_ST\",\"EST_MSA\", \"MS\", \"RRACE\", \"TWDAYS\", \"EEDUC\", \"KINDWORK\", \"THHLD_NUMPER\", \"INCOME\",\"EGENID_BIRTH\",\"AGE\",\"RHISPANIC\",\"ANYWORK\")\nind &lt;- ind %&gt;% select(all_of(variables_of_interest))\n\n# Display the filtered and selected data\nhead(as.data.frame(ind))"
  },
  {
    "objectID": "smsm.html#data-cleaning-and-transformations",
    "href": "smsm.html#data-cleaning-and-transformations",
    "title": "Spatial Microsimulation for Middlesex County, NJ",
    "section": "Data Cleaning and Transformations",
    "text": "Data Cleaning and Transformations\n\n# Display unique values of variables for understanding\nsort(unique(ind$AGE))\n\n [1] 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44\n[26] 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69\n[51] 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 88\n\nsort(unique(ind$EEDUC))\n\n[1] 1 2 3 4 5 6 7\n\nsort(unique(ind$EGENID_BIRTH))\n\n[1] 1 2\n\nsort(unique(ind$KINDWORK))\n\n[1] -99 -88   1   2   3   4   5\n\n# Replace special values with NA in education variable\nind$EEDUC[ind$EEDUC == -99] &lt;- NA\nind$EEDUC[ind$EEDUC == -88] &lt;- NA\n\n# Drop rows with NA values\nind &lt;- ind %&gt;% drop_na()\n\n# Filter data for individuals aged 25 and above\nind &lt;- ind[ind$AGE &gt;= 25,]\n\n# Display cleaned data\nhead(as.data.frame(ind))\n\n\n  \n\n\n# Display unique values again after cleaning\nsort(unique(ind$AGE))\n\n [1] 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49\n[26] 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74\n[51] 75 76 77 78 79 80 81 82 83 84 85 86 88\n\nsort(unique(ind$EEDUC))\n\n[1] 1 2 3 4 5 6 7\n\nsort(unique(ind$EGENID_BIRTH))\n\n[1] 1 2\n\nsort(unique(ind$KINDWORK))\n\n[1] -99 -88   1   2   3   4   5"
  },
  {
    "objectID": "smsm.html#recoding-variables",
    "href": "smsm.html#recoding-variables",
    "title": "Spatial Microsimulation for Middlesex County, NJ",
    "section": "Recoding Variables",
    "text": "Recoding Variables\n\n# Define age group breaks and labels\nbrks &lt;- c(25, 30, 35, 40, 45, 50, 55, 60, 62, 65, 67, 70, 75, 80, 85, Inf)\nlabs &lt;- c(\"25 to 29 years\", \"30 to 34 years\", \"35 to 39 years\", \"40 to 44 years\", \n          \"45 to 49 years\", \"50 to 54 years\", \"55 to 59 years\", \"60 and 61 years\", \n          \"62 to 64 years\", \"65 and 66 years\", \"67 to 69 years\", \"70 to 74 years\", \n          \"75 to 79 years\", \"80 to 84 years\",\"85 years and over\")\n\n# Recode age into groups\nind$AGE &lt;- cut(ind$AGE, breaks = brks, labels = labs, right=FALSE)\n\n# Recode gender variable\nind$EGENID_BIRTH &lt;- factor(ind$EGENID_BIRTH, levels = 1:2, labels = c(\"Male\", \"Female\"))\n\n# Recode education levels\nind$EEDUC &lt;- factor(ind$EEDUC, levels = 1:7, labels = c(\"Less than high school\",\"Some high school\",\"High school graduate or equivalent (for example GED)\",\"Some college, but degree not received or is in progress\",\"Associateâ€™s degree (for example AA, AS)\",\"Bachelor's degree (for example BA, BS, AB)\",\"Graduate degree (for example master's, professional, doctorate)\"))\n\n# Display recoded data\nhead(as.data.frame(ind))"
  },
  {
    "objectID": "smsm.html#reading-and-validating-constraint-data",
    "href": "smsm.html#reading-and-validating-constraint-data",
    "title": "Spatial Microsimulation for Middlesex County, NJ",
    "section": "Reading and Validating Constraint Data",
    "text": "Reading and Validating Constraint Data\n\n# Read constraint data for age, sex, and education from CSV files\ncon_age &lt;- read.csv(\"con_age.csv\")\ncon_sex &lt;- read.csv(\"con_sex.csv\")\ncon_edu &lt;- read.csv(\"con_edu.csv\")\n\n# Display the constraint data\nhead(as.data.frame(con_age))\n\n\n  \n\n\nhead(as.data.frame(con_sex))\n\n\n  \n\n\nhead(as.data.frame(con_edu))\n\n\n  \n\n\n# Validate the sums of the constraints\n# Sum of age constraints\nsum(con_age)\n\n[1] 591318\n\n# Sum of sex constraints\nsum(con_sex)\n\n[1] 591318\n\n# Sum of education constraints\nsum(con_edu)\n\n[1] 591318\n\n# Validate the row sums of the constraints\n# Row sums of age constraints\nrowSums(con_age)\n\n  [1] 1031 1435  946 1615  520  117 1381  629 2265  736 1602  954 1022 1367  823\n [16]  819  629 1493 1280 1523  450  710 1371 1964 1203  942 1166  431 1552 1333\n [31] 1704  503  987  541 1271 1211  388 1457 2439  511 1124  744 1110  494 1654\n [46]  964 1126  579  962 1253  741 1704  856  877  717  458  460 2395  581 1553\n [61] 1861  610 1007 1330  825 1734  886  449  993 1658  850 1244  914  693 1184\n [76]  812 1200 1809  733  888 1051 1140 1476 1453 1043 1184 1050  628  837 1131\n [91]  665  387 1449  719  435  838  634 1193 1368  760  478   23 2161  820 1184\n[106]  736 1286  559  688 1564  922  702 1437 1780 1180 1584  539 1001  806  803\n[121]  478  612  565 1505 1324  575 1482  572  983  575 1148  878 1027  942 1339\n[136] 1120  921  618 1679  619   26   90 1252 1011 1376  511  547  558  665  844\n[151] 1268 1871  557  992  613  901  748  618 1198 1096  567 1132 1426 1167 1310\n[166] 1462 1805 1045  378  492  661 1149  897  927 1080  821  920 2294 1411  782\n[181]  811 1537  510  736  521  573 1553 1370 1344  794  507  453 1661 1654  500\n[196]  901  894  768 1730  475  887  614 1100 1527  753 1405  975 1250  827  716\n[211]  492  929 1480 1221  920 1140  376  935 1198  431  758  580 1201 2201  884\n[226]  982  958  531  451 1060  818  802 1618 1922 1606  757  945  777 1146  991\n[241]  982  688 1145 1384  203 2486  886 1021 1283 1209 1121  486 1134  686  784\n[256] 1085  967  824  391 1252  640 1988  775 1379  889  674  419  645 1173  834\n[271] 1075  836 2283 1993  368 1338  544 1248 1372  372  476  193  530  933  756\n[286]  282  103  858  866  910 1501 1338  854 1337  607 1156  695  967 1631  947\n[301]  789 1372  620 1788 1085  863  789  704  488  890  295 1069 1307  646 1151\n[316]  912  937 1277 1309  912 1404  966 2266  832  785  750 1066  907 1694  229\n[331] 1516 1815 1692  866  437  714  748  914  605  844 1250  690  826 1105 1080\n[346] 1096  961 1495  916  868 1736 1782 1695  843 2051  852 1196 1207  889 1059\n[361] 1864 1170 1464  972  523  427 1053 1308  812 1062  556  780  401  433  873\n[376]  703  711 1181 1608 2065 1633  536  479  619 1277 1166 1245  170 2319  658\n[391] 1950  522 1330 1506  942  942 1361 1305 1001 1606 1292 1045  798  403  918\n[406] 1200  695 1095  523  755  851  897 1174  625 1185 2224 1137 1713 1289 1238\n[421]  851 1125 1034  622  710  536 1841 1690  751 1318  825  970 1901  965  776\n[436]  870  993 1459 1832 1616 1384 1133 1666 1254  889 1897 1462 1241  469  994\n[451] 1445  745 1849  350 1524  500  723  509 1158  955  638 2051 1116  580 1341\n[466]  984 1263  618  786  871 1053  917  969  993  465  810  238 1101 1672 1243\n[481]  975  487 1162 1588 1316  830 1706 1622 1136 1263  764 2339 1230 1908 1522\n[496] 2502  463 1547 1886 1224  934 1374 1888 1183  684 1145 2033 1491  746  723\n[511] 1134 2189  394 1122 1596 1060   64 1458 1638 1361  860 1155  923 1163 1693\n[526] 1166 1198 1871  777  621 1201 2353  668  876  893 1709 1006 1025  382 1248\n[541] 1447 1779 1115   19  668   52  725 3240 1123  916 1065  759 1210  809 1336\n[556]  303  271  800  605 1183 1667  561  611 1197   21  645\n\n# Row sums of sex constraints\nrowSums(con_sex)\n\n  [1] 1031 1435  946 1615  520  117 1381  629 2265  736 1602  954 1022 1367  823\n [16]  819  629 1493 1280 1523  450  710 1371 1964 1203  942 1166  431 1552 1333\n [31] 1704  503  987  541 1271 1211  388 1457 2439  511 1124  744 1110  494 1654\n [46]  964 1126  579  962 1253  741 1704  856  877  717  458  460 2395  581 1553\n [61] 1861  610 1007 1330  825 1734  886  449  993 1658  850 1244  914  693 1184\n [76]  812 1200 1809  733  888 1051 1140 1476 1453 1043 1184 1050  628  837 1131\n [91]  665  387 1449  719  435  838  634 1193 1368  760  478   23 2161  820 1184\n[106]  736 1286  559  688 1564  922  702 1437 1780 1180 1584  539 1001  806  803\n[121]  478  612  565 1505 1324  575 1482  572  983  575 1148  878 1027  942 1339\n[136] 1120  921  618 1679  619   26   90 1252 1011 1376  511  547  558  665  844\n[151] 1268 1871  557  992  613  901  748  618 1198 1096  567 1132 1426 1167 1310\n[166] 1462 1805 1045  378  492  661 1149  897  927 1080  821  920 2294 1411  782\n[181]  811 1537  510  736  521  573 1553 1370 1344  794  507  453 1661 1654  500\n[196]  901  894  768 1730  475  887  614 1100 1527  753 1405  975 1250  827  716\n[211]  492  929 1480 1221  920 1140  376  935 1198  431  758  580 1201 2201  884\n[226]  982  958  531  451 1060  818  802 1618 1922 1606  757  945  777 1146  991\n[241]  982  688 1145 1384  203 2486  886 1021 1283 1209 1121  486 1134  686  784\n[256] 1085  967  824  391 1252  640 1988  775 1379  889  674  419  645 1173  834\n[271] 1075  836 2283 1993  368 1338  544 1248 1372  372  476  193  530  933  756\n[286]  282  103  858  866  910 1501 1338  854 1337  607 1156  695  967 1631  947\n[301]  789 1372  620 1788 1085  863  789  704  488  890  295 1069 1307  646 1151\n[316]  912  937 1277 1309  912 1404  966 2266  832  785  750 1066  907 1694  229\n[331] 1516 1815 1692  866  437  714  748  914  605  844 1250  690  826 1105 1080\n[346] 1096  961 1495  916  868 1736 1782 1695  843 2051  852 1196 1207  889 1059\n[361] 1864 1170 1464  972  523  427 1053 1308  812 1062  556  780  401  433  873\n[376]  703  711 1181 1608 2065 1633  536  479  619 1277 1166 1245  170 2319  658\n[391] 1950  522 1330 1506  942  942 1361 1305 1001 1606 1292 1045  798  403  918\n[406] 1200  695 1095  523  755  851  897 1174  625 1185 2224 1137 1713 1289 1238\n[421]  851 1125 1034  622  710  536 1841 1690  751 1318  825  970 1901  965  776\n[436]  870  993 1459 1832 1616 1384 1133 1666 1254  889 1897 1462 1241  469  994\n[451] 1445  745 1849  350 1524  500  723  509 1158  955  638 2051 1116  580 1341\n[466]  984 1263  618  786  871 1053  917  969  993  465  810  238 1101 1672 1243\n[481]  975  487 1162 1588 1316  830 1706 1622 1136 1263  764 2339 1230 1908 1522\n[496] 2502  463 1547 1886 1224  934 1374 1888 1183  684 1145 2033 1491  746  723\n[511] 1134 2189  394 1122 1596 1060   64 1458 1638 1361  860 1155  923 1163 1693\n[526] 1166 1198 1871  777  621 1201 2353  668  876  893 1709 1006 1025  382 1248\n[541] 1447 1779 1115   19  668   52  725 3240 1123  916 1065  759 1210  809 1336\n[556]  303  271  800  605 1183 1667  561  611 1197   21  645\n\n# Row sums of education constraints\nrowSums(con_edu)\n\n  [1] 1031 1435  946 1615  520  117 1381  629 2265  736 1602  954 1022 1367  823\n [16]  819  629 1493 1280 1523  450  710 1371 1964 1203  942 1166  431 1552 1333\n [31] 1704  503  987  541 1271 1211  388 1457 2439  511 1124  744 1110  494 1654\n [46]  964 1126  579  962 1253  741 1704  856  877  717  458  460 2395  581 1553\n [61] 1861  610 1007 1330  825 1734  886  449  993 1658  850 1244  914  693 1184\n [76]  812 1200 1809  733  888 1051 1140 1476 1453 1043 1184 1050  628  837 1131\n [91]  665  387 1449  719  435  838  634 1193 1368  760  478   23 2161  820 1184\n[106]  736 1286  559  688 1564  922  702 1437 1780 1180 1584  539 1001  806  803\n[121]  478  612  565 1505 1324  575 1482  572  983  575 1148  878 1027  942 1339\n[136] 1120  921  618 1679  619   26   90 1252 1011 1376  511  547  558  665  844\n[151] 1268 1871  557  992  613  901  748  618 1198 1096  567 1132 1426 1167 1310\n[166] 1462 1805 1045  378  492  661 1149  897  927 1080  821  920 2294 1411  782\n[181]  811 1537  510  736  521  573 1553 1370 1344  794  507  453 1661 1654  500\n[196]  901  894  768 1730  475  887  614 1100 1527  753 1405  975 1250  827  716\n[211]  492  929 1480 1221  920 1140  376  935 1198  431  758  580 1201 2201  884\n[226]  982  958  531  451 1060  818  802 1618 1922 1606  757  945  777 1146  991\n[241]  982  688 1145 1384  203 2486  886 1021 1283 1209 1121  486 1134  686  784\n[256] 1085  967  824  391 1252  640 1988  775 1379  889  674  419  645 1173  834\n[271] 1075  836 2283 1993  368 1338  544 1248 1372  372  476  193  530  933  756\n[286]  282  103  858  866  910 1501 1338  854 1337  607 1156  695  967 1631  947\n[301]  789 1372  620 1788 1085  863  789  704  488  890  295 1069 1307  646 1151\n[316]  912  937 1277 1309  912 1404  966 2266  832  785  750 1066  907 1694  229\n[331] 1516 1815 1692  866  437  714  748  914  605  844 1250  690  826 1105 1080\n[346] 1096  961 1495  916  868 1736 1782 1695  843 2051  852 1196 1207  889 1059\n[361] 1864 1170 1464  972  523  427 1053 1308  812 1062  556  780  401  433  873\n[376]  703  711 1181 1608 2065 1633  536  479  619 1277 1166 1245  170 2319  658\n[391] 1950  522 1330 1506  942  942 1361 1305 1001 1606 1292 1045  798  403  918\n[406] 1200  695 1095  523  755  851  897 1174  625 1185 2224 1137 1713 1289 1238\n[421]  851 1125 1034  622  710  536 1841 1690  751 1318  825  970 1901  965  776\n[436]  870  993 1459 1832 1616 1384 1133 1666 1254  889 1897 1462 1241  469  994\n[451] 1445  745 1849  350 1524  500  723  509 1158  955  638 2051 1116  580 1341\n[466]  984 1263  618  786  871 1053  917  969  993  465  810  238 1101 1672 1243\n[481]  975  487 1162 1588 1316  830 1706 1622 1136 1263  764 2339 1230 1908 1522\n[496] 2502  463 1547 1886 1224  934 1374 1888 1183  684 1145 2033 1491  746  723\n[511] 1134 2189  394 1122 1596 1060   64 1458 1638 1361  860 1155  923 1163 1693\n[526] 1166 1198 1871  777  621 1201 2353  668  876  893 1709 1006 1025  382 1248\n[541] 1447 1779 1115   19  668   52  725 3240 1123  916 1065  759 1210  809 1336\n[556]  303  271  800  605 1183 1667  561  611 1197   21  645\n\n# Check if the row sums of different constraints are equal\n# Check if row sums of age and sex constraints are equal\nrowSums(con_age) == rowSums(con_sex)\n\n  [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [46] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [61] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [76] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [91] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[106] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[121] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[136] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[151] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[166] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[181] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[196] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[211] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[226] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[241] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[256] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[271] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[286] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[301] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[316] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[331] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[346] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[361] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[376] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[391] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[406] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[421] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[436] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[451] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[466] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[481] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[496] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[511] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[526] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[541] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[556] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n# Check if row sums of age and education constraints are equal\nrowSums(con_age) == rowSums(con_edu)\n\n  [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [46] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [61] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [76] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [91] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[106] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[121] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[136] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[151] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[166] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[181] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[196] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[211] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[226] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[241] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[256] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[271] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[286] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[301] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[316] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[331] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[346] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[361] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[376] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[391] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[406] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[421] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[436] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[451] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[466] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[481] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[496] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[511] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[526] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[541] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[556] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n# Check if row sums of sex and education constraints are equal\nrowSums(con_sex) == rowSums(con_edu)\n\n  [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [46] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [61] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [76] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [91] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[106] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[121] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[136] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[151] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[166] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[181] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[196] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[211] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[226] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[241] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[256] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[271] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[286] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[301] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[316] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[331] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[346] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[361] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[376] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[391] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[406] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[421] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[436] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[451] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[466] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[481] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[496] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[511] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[526] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[541] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[556] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE"
  },
  {
    "objectID": "smsm.html#naming-columns-and-combining-constraints",
    "href": "smsm.html#naming-columns-and-combining-constraints",
    "title": "Spatial Microsimulation for Middlesex County, NJ",
    "section": "Naming Columns and Combining Constraints",
    "text": "Naming Columns and Combining Constraints\n\n# Assign column names to age and education constraints based on the levels in the individual data\nnames(con_age) &lt;- levels(ind$AGE)\nnames(con_edu) &lt;- levels(ind$EEDUC)\n\n# Combine age, sex, and education constraints into a single data frame\ncons &lt;- cbind(con_age, con_sex, con_edu)\n\n# Display the combined constraints\nhead(as.data.frame(cons))"
  },
  {
    "objectID": "smsm.html#creating-categorical-indicator-matrices",
    "href": "smsm.html#creating-categorical-indicator-matrices",
    "title": "Spatial Microsimulation for Middlesex County, NJ",
    "section": "Creating Categorical Indicator Matrices",
    "text": "Creating Categorical Indicator Matrices\n\n# Create binary indicator matrix for age categories\ncat_age &lt;- model.matrix(~ ind$AGE - 1)\n# Display the dimensions of the age indicator matrix\ndim(cat_age)\n\n[1] 821  15\n\n# Create binary indicator matrix for sex categories\ncat_sex &lt;- model.matrix(~ ind$EGENID_BIRTH - 1)\n# Display the dimensions of the sex indicator matrix\ndim(cat_sex)\n\n[1] 821   2\n\n# Create binary indicator matrix for education categories\ncat_edu &lt;- model.matrix(~ ind$EEDUC - 1)\n# Display the dimensions of the education indicator matrix\ndim(cat_edu)\n\n[1] 821   7\n\n# Combine age, sex, and education indicator matrices into a single matrix\nind_cat &lt;- cbind(cat_age, cat_sex, cat_edu)\n\n# Display the first few rows of the combined indicator matrix\nhead(as.data.frame(ind_cat))"
  },
  {
    "objectID": "smsm.html#aggregating-indicator-matrix-and-defining-dimensions",
    "href": "smsm.html#aggregating-indicator-matrix-and-defining-dimensions",
    "title": "Spatial Microsimulation for Middlesex County, NJ",
    "section": "Aggregating Indicator Matrix and Defining Dimensions",
    "text": "Aggregating Indicator Matrix and Defining Dimensions\n\n# Calculate the column sums of the indicator matrix\ncolSums(ind_cat)\n\n                                                   ind$AGE25 to 29 years \n                                                                      27 \n                                                   ind$AGE30 to 34 years \n                                                                      56 \n                                                   ind$AGE35 to 39 years \n                                                                      79 \n                                                   ind$AGE40 to 44 years \n                                                                      99 \n                                                   ind$AGE45 to 49 years \n                                                                      99 \n                                                   ind$AGE50 to 54 years \n                                                                      76 \n                                                   ind$AGE55 to 59 years \n                                                                      73 \n                                                  ind$AGE60 and 61 years \n                                                                      29 \n                                                   ind$AGE62 to 64 years \n                                                                      64 \n                                                  ind$AGE65 and 66 years \n                                                                      23 \n                                                   ind$AGE67 to 69 years \n                                                                      41 \n                                                   ind$AGE70 to 74 years \n                                                                      75 \n                                                   ind$AGE75 to 79 years \n                                                                      50 \n                                                   ind$AGE80 to 84 years \n                                                                      18 \n                                                ind$AGE85 years and over \n                                                                      12 \n                                                    ind$EGENID_BIRTHMale \n                                                                     400 \n                                                  ind$EGENID_BIRTHFemale \n                                                                     421 \n                                          ind$EEDUCLess than high school \n                                                                      12 \n                                               ind$EEDUCSome high school \n                                                                      21 \n           ind$EEDUCHigh school graduate or equivalent (for example GED) \n                                                                     103 \n        ind$EEDUCSome college, but degree not received or is in progress \n                                                                     141 \n                        ind$EEDUCAssociateâ€™s degree (for example AA, AS) \n                                                                      51 \n                     ind$EEDUCBachelor's degree (for example BA, BS, AB) \n                                                                     256 \nind$EEDUCGraduate degree (for example master's, professional, doctorate) \n                                                                     237 \n\n# Aggregate the individual categories\nind_agg &lt;- colSums(ind_cat)\n\n# Compare the first row of constraints with the aggregated individual categories\nrbind(cons[1,], ind_agg)\n\n\n  \n\n\n# Define the number of zones (rows) in the constraints data\nn_zone &lt;- nrow(cons)\n# Display the number of zones\nn_zone\n\n[1] 566\n\n# Define the number of individuals in the individual data\nn_ind &lt;- nrow(ind)\n# Display the number of individuals\nn_ind\n\n[1] 821\n\n# Define the number of age categories\nn_age &lt;- ncol(con_age)\n# Display the number of age categories\nn_age\n\n[1] 15\n\n# Define the number of sex categories\nn_sex &lt;- ncol(con_sex)\n# Display the number of sex categories\nn_sex\n\n[1] 2\n\n# Define the number of education categories\nn_edu &lt;- ncol(con_edu)\n# Display the number of education categories\nn_edu\n\n[1] 7"
  },
  {
    "objectID": "smsm.html#initializing-weight-matrices-and-performing-first-iteration-of-ipf",
    "href": "smsm.html#initializing-weight-matrices-and-performing-first-iteration-of-ipf",
    "title": "Spatial Microsimulation for Middlesex County, NJ",
    "section": "Initializing Weight Matrices and Performing First Iteration of IPF",
    "text": "Initializing Weight Matrices and Performing First Iteration of IPF\n\n# Initialize weight matrices with uniform weights\nweights &lt;- matrix(data = 1, nrow = nrow(ind), ncol = nrow(cons))\nweights3 &lt;- weights1 &lt;- weights2 &lt;- weights\n# Display the dimensions of the weights matrix\ndim(weights)\n\n[1] 821 566\n\n# Aggregate the individual categories initially, based on constraints\nind_agg0 &lt;- t(apply(cons, 1, function(x) 1 * ind_agg))\ncolnames(ind_agg0) &lt;- names(cons)\n# Display the initial aggregated individual categories\nhead(as.data.frame(ind_agg0))\n\n\n  \n\n\n# First iteration of IPF to adjust weights based on age constraints\nfor(j in 1:n_zone){\n  for(i in 1:n_age){\n    index &lt;- ind_cat[, i] == 1\n    weights1[index, j] &lt;- weights[index, j] * con_age[j, i] / ind_agg0[j, i]\n  }\n}\n# Display the adjusted weights after the first iteration\nhead(as.data.frame(weights1))"
  },
  {
    "objectID": "smsm.html#aggregating-after-first-ipf-iteration",
    "href": "smsm.html#aggregating-after-first-ipf-iteration",
    "title": "Spatial Microsimulation for Middlesex County, NJ",
    "section": "Aggregating After First IPF Iteration",
    "text": "Aggregating After First IPF Iteration\n\n# Initialize aggregated matrices to store results of each IPF iteration\nind_agg3 &lt;- ind_agg2 &lt;- ind_agg1 &lt;- ind_agg0 * NA\n\n# Aggregate individual categories after the first IPF iteration\nfor(i in 1:n_zone){\n  ind_agg1[i, ] &lt;- colSums(ind_cat * weights1[, i])\n}\n# Display the aggregated individual categories after the first iteration\nhead(as.data.frame(ind_agg1))\n\n\n  \n\n\n# Calculate the row sums of the aggregated categories and the constraints for age\nrowSums(ind_agg1[, 1:15])\n\n  [1] 1031 1435  946 1615  520  117 1381  629 2265  736 1602  954 1022 1367  823\n [16]  819  629 1493 1280 1523  450  710 1371 1964 1203  942 1166  431 1552 1333\n [31] 1704  503  987  541 1271 1211  388 1457 2439  511 1124  744 1110  494 1654\n [46]  964 1126  579  962 1253  741 1704  856  877  717  458  460 2395  581 1553\n [61] 1861  610 1007 1330  825 1734  886  449  993 1658  850 1244  914  693 1184\n [76]  812 1200 1809  733  888 1051 1140 1476 1453 1043 1184 1050  628  837 1131\n [91]  665  387 1449  719  435  838  634 1193 1368  760  478   23 2161  820 1184\n[106]  736 1286  559  688 1564  922  702 1437 1780 1180 1584  539 1001  806  803\n[121]  478  612  565 1505 1324  575 1482  572  983  575 1148  878 1027  942 1339\n[136] 1120  921  618 1679  619   26   90 1252 1011 1376  511  547  558  665  844\n[151] 1268 1871  557  992  613  901  748  618 1198 1096  567 1132 1426 1167 1310\n[166] 1462 1805 1045  378  492  661 1149  897  927 1080  821  920 2294 1411  782\n[181]  811 1537  510  736  521  573 1553 1370 1344  794  507  453 1661 1654  500\n[196]  901  894  768 1730  475  887  614 1100 1527  753 1405  975 1250  827  716\n[211]  492  929 1480 1221  920 1140  376  935 1198  431  758  580 1201 2201  884\n[226]  982  958  531  451 1060  818  802 1618 1922 1606  757  945  777 1146  991\n[241]  982  688 1145 1384  203 2486  886 1021 1283 1209 1121  486 1134  686  784\n[256] 1085  967  824  391 1252  640 1988  775 1379  889  674  419  645 1173  834\n[271] 1075  836 2283 1993  368 1338  544 1248 1372  372  476  193  530  933  756\n[286]  282  103  858  866  910 1501 1338  854 1337  607 1156  695  967 1631  947\n[301]  789 1372  620 1788 1085  863  789  704  488  890  295 1069 1307  646 1151\n[316]  912  937 1277 1309  912 1404  966 2266  832  785  750 1066  907 1694  229\n[331] 1516 1815 1692  866  437  714  748  914  605  844 1250  690  826 1105 1080\n[346] 1096  961 1495  916  868 1736 1782 1695  843 2051  852 1196 1207  889 1059\n[361] 1864 1170 1464  972  523  427 1053 1308  812 1062  556  780  401  433  873\n[376]  703  711 1181 1608 2065 1633  536  479  619 1277 1166 1245  170 2319  658\n[391] 1950  522 1330 1506  942  942 1361 1305 1001 1606 1292 1045  798  403  918\n[406] 1200  695 1095  523  755  851  897 1174  625 1185 2224 1137 1713 1289 1238\n[421]  851 1125 1034  622  710  536 1841 1690  751 1318  825  970 1901  965  776\n[436]  870  993 1459 1832 1616 1384 1133 1666 1254  889 1897 1462 1241  469  994\n[451] 1445  745 1849  350 1524  500  723  509 1158  955  638 2051 1116  580 1341\n[466]  984 1263  618  786  871 1053  917  969  993  465  810  238 1101 1672 1243\n[481]  975  487 1162 1588 1316  830 1706 1622 1136 1263  764 2339 1230 1908 1522\n[496] 2502  463 1547 1886 1224  934 1374 1888 1183  684 1145 2033 1491  746  723\n[511] 1134 2189  394 1122 1596 1060   64 1458 1638 1361  860 1155  923 1163 1693\n[526] 1166 1198 1871  777  621 1201 2353  668  876  893 1709 1006 1025  382 1248\n[541] 1447 1779 1115   19  668   52  725 3240 1123  916 1065  759 1210  809 1336\n[556]  303  271  800  605 1183 1667  561  611 1197   21  645\n\nrowSums(cons[, 1:15])\n\n  [1] 1031 1435  946 1615  520  117 1381  629 2265  736 1602  954 1022 1367  823\n [16]  819  629 1493 1280 1523  450  710 1371 1964 1203  942 1166  431 1552 1333\n [31] 1704  503  987  541 1271 1211  388 1457 2439  511 1124  744 1110  494 1654\n [46]  964 1126  579  962 1253  741 1704  856  877  717  458  460 2395  581 1553\n [61] 1861  610 1007 1330  825 1734  886  449  993 1658  850 1244  914  693 1184\n [76]  812 1200 1809  733  888 1051 1140 1476 1453 1043 1184 1050  628  837 1131\n [91]  665  387 1449  719  435  838  634 1193 1368  760  478   23 2161  820 1184\n[106]  736 1286  559  688 1564  922  702 1437 1780 1180 1584  539 1001  806  803\n[121]  478  612  565 1505 1324  575 1482  572  983  575 1148  878 1027  942 1339\n[136] 1120  921  618 1679  619   26   90 1252 1011 1376  511  547  558  665  844\n[151] 1268 1871  557  992  613  901  748  618 1198 1096  567 1132 1426 1167 1310\n[166] 1462 1805 1045  378  492  661 1149  897  927 1080  821  920 2294 1411  782\n[181]  811 1537  510  736  521  573 1553 1370 1344  794  507  453 1661 1654  500\n[196]  901  894  768 1730  475  887  614 1100 1527  753 1405  975 1250  827  716\n[211]  492  929 1480 1221  920 1140  376  935 1198  431  758  580 1201 2201  884\n[226]  982  958  531  451 1060  818  802 1618 1922 1606  757  945  777 1146  991\n[241]  982  688 1145 1384  203 2486  886 1021 1283 1209 1121  486 1134  686  784\n[256] 1085  967  824  391 1252  640 1988  775 1379  889  674  419  645 1173  834\n[271] 1075  836 2283 1993  368 1338  544 1248 1372  372  476  193  530  933  756\n[286]  282  103  858  866  910 1501 1338  854 1337  607 1156  695  967 1631  947\n[301]  789 1372  620 1788 1085  863  789  704  488  890  295 1069 1307  646 1151\n[316]  912  937 1277 1309  912 1404  966 2266  832  785  750 1066  907 1694  229\n[331] 1516 1815 1692  866  437  714  748  914  605  844 1250  690  826 1105 1080\n[346] 1096  961 1495  916  868 1736 1782 1695  843 2051  852 1196 1207  889 1059\n[361] 1864 1170 1464  972  523  427 1053 1308  812 1062  556  780  401  433  873\n[376]  703  711 1181 1608 2065 1633  536  479  619 1277 1166 1245  170 2319  658\n[391] 1950  522 1330 1506  942  942 1361 1305 1001 1606 1292 1045  798  403  918\n[406] 1200  695 1095  523  755  851  897 1174  625 1185 2224 1137 1713 1289 1238\n[421]  851 1125 1034  622  710  536 1841 1690  751 1318  825  970 1901  965  776\n[436]  870  993 1459 1832 1616 1384 1133 1666 1254  889 1897 1462 1241  469  994\n[451] 1445  745 1849  350 1524  500  723  509 1158  955  638 2051 1116  580 1341\n[466]  984 1263  618  786  871 1053  917  969  993  465  810  238 1101 1672 1243\n[481]  975  487 1162 1588 1316  830 1706 1622 1136 1263  764 2339 1230 1908 1522\n[496] 2502  463 1547 1886 1224  934 1374 1888 1183  684 1145 2033 1491  746  723\n[511] 1134 2189  394 1122 1596 1060   64 1458 1638 1361  860 1155  923 1163 1693\n[526] 1166 1198 1871  777  621 1201 2353  668  876  893 1709 1006 1025  382 1248\n[541] 1447 1779 1115   19  668   52  725 3240 1123  916 1065  759 1210  809 1336\n[556]  303  271  800  605 1183 1667  561  611 1197   21  645\n\n# Check if the row sums of the aggregated categories match the constraints for age\nrowSums(ind_agg1[, 1:15]) == rowSums(cons[, 1:15])\n\n  [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE\n [13]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [25]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [37]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [49]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [61]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [73]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [85]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [97]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[109]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[121]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[133]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[145]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[157]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[169]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[181]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[193]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[205]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[217]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[229]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[241]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[253]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[265]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[277]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[289]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[301]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[313]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[325]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[337]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[349]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[361]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[373]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[385]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[397]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[409]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[421]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[433]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[445]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[457]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[469]  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[481]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[493]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[505]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[517]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[529]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[541]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[553]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[565]  TRUE  TRUE"
  },
  {
    "objectID": "smsm.html#second-iteration-of-ipf-and-validation",
    "href": "smsm.html#second-iteration-of-ipf-and-validation",
    "title": "Spatial Microsimulation for Middlesex County, NJ",
    "section": "Second Iteration of IPF and Validation",
    "text": "Second Iteration of IPF and Validation\n\n# Second iteration of IPF to adjust weights based on sex and age constraints\nfor (j in 1:n_zone) {\n  for (i in 1:(n_sex + n_age)) {\n    index &lt;- ind_cat[, i] == 1\n    weights2[index, j] &lt;- weights1[index, j] * cons[j, i] / ind_agg1[j, i]\n  }\n}\n# Display the adjusted weights after the second iteration\nhead(as.data.frame(weights2))\n\n\n  \n\n\n# Aggregate individual categories after the second IPF iteration\nfor(i in 1:n_zone){\n  ind_agg2[i, ] &lt;- colSums(ind_cat * weights2[, i])\n}\n# Display the aggregated individual categories after the second iteration\nhead(as.data.frame(ind_agg2))\n\n\n  \n\n\n# Calculate and display the row sums of the aggregated categories for sex\nrowSums(ind_agg2[, 16:17])\n\n  [1] 1031 1435  946 1615  520  117 1381  629 2265  736 1602  954 1022 1367  823\n [16]  819  629 1493 1280 1523  450  710 1371 1964 1203  942 1166  431 1552 1333\n [31] 1704  503  987  541 1271 1211  388 1457 2439  511 1124  744 1110  494 1654\n [46]  964 1126  579  962 1253  741 1704  856  877  717  458  460 2395  581 1553\n [61] 1861  610 1007 1330  825 1734  886  449  993 1658  850 1244  914  693 1184\n [76]  812 1200 1809  733  888 1051 1140 1476 1453 1043 1184 1050  628  837 1131\n [91]  665  387 1449  719  435  838  634 1193 1368  760  478   23 2161  820 1184\n[106]  736 1286  559  688 1564  922  702 1437 1780 1180 1584  539 1001  806  803\n[121]  478  612  565 1505 1324  575 1482  572  983  575 1148  878 1027  942 1339\n[136] 1120  921  618 1679  619   26   90 1252 1011 1376  511  547  558  665  844\n[151] 1268 1871  557  992  613  901  748  618 1198 1096  567 1132 1426 1167 1310\n[166] 1462 1805 1045  378  492  661 1149  897  927 1080  821  920 2294 1411  782\n[181]  811 1537  510  736  521  573 1553 1370 1344  794  507  453 1661 1654  500\n[196]  901  894  768 1730  475  887  614 1100 1527  753 1405  975 1250  827  716\n[211]  492  929 1480 1221  920 1140  376  935 1198  431  758  580 1201 2201  884\n[226]  982  958  531  451 1060  818  802 1618 1922 1606  757  945  777 1146  991\n[241]  982  688 1145 1384  203 2486  886 1021 1283 1209 1121  486 1134  686  784\n[256] 1085  967  824  391 1252  640 1988  775 1379  889  674  419  645 1173  834\n[271] 1075  836 2283 1993  368 1338  544 1248 1372  372  476  193  530  933  756\n[286]  282  103  858  866  910 1501 1338  854 1337  607 1156  695  967 1631  947\n[301]  789 1372  620 1788 1085  863  789  704  488  890  295 1069 1307  646 1151\n[316]  912  937 1277 1309  912 1404  966 2266  832  785  750 1066  907 1694  229\n[331] 1516 1815 1692  866  437  714  748  914  605  844 1250  690  826 1105 1080\n[346] 1096  961 1495  916  868 1736 1782 1695  843 2051  852 1196 1207  889 1059\n[361] 1864 1170 1464  972  523  427 1053 1308  812 1062  556  780  401  433  873\n[376]  703  711 1181 1608 2065 1633  536  479  619 1277 1166 1245  170 2319  658\n[391] 1950  522 1330 1506  942  942 1361 1305 1001 1606 1292 1045  798  403  918\n[406] 1200  695 1095  523  755  851  897 1174  625 1185 2224 1137 1713 1289 1238\n[421]  851 1125 1034  622  710  536 1841 1690  751 1318  825  970 1901  965  776\n[436]  870  993 1459 1832 1616 1384 1133 1666 1254  889 1897 1462 1241  469  994\n[451] 1445  745 1849  350 1524  500  723  509 1158  955  638 2051 1116  580 1341\n[466]  984 1263  618  786  871 1053  917  969  993  465  810  238 1101 1672 1243\n[481]  975  487 1162 1588 1316  830 1706 1622 1136 1263  764 2339 1230 1908 1522\n[496] 2502  463 1547 1886 1224  934 1374 1888 1183  684 1145 2033 1491  746  723\n[511] 1134 2189  394 1122 1596 1060   64 1458 1638 1361  860 1155  923 1163 1693\n[526] 1166 1198 1871  777  621 1201 2353  668  876  893 1709 1006 1025  382 1248\n[541] 1447 1779 1115   19  668   52  725 3240 1123  916 1065  759 1210  809 1336\n[556]  303  271  800  605 1183 1667  561  611 1197   21  645\n\n# Calculate and display the row sums of the constraints for sex\nrowSums(cons[, 16:17])\n\n  [1] 1031 1435  946 1615  520  117 1381  629 2265  736 1602  954 1022 1367  823\n [16]  819  629 1493 1280 1523  450  710 1371 1964 1203  942 1166  431 1552 1333\n [31] 1704  503  987  541 1271 1211  388 1457 2439  511 1124  744 1110  494 1654\n [46]  964 1126  579  962 1253  741 1704  856  877  717  458  460 2395  581 1553\n [61] 1861  610 1007 1330  825 1734  886  449  993 1658  850 1244  914  693 1184\n [76]  812 1200 1809  733  888 1051 1140 1476 1453 1043 1184 1050  628  837 1131\n [91]  665  387 1449  719  435  838  634 1193 1368  760  478   23 2161  820 1184\n[106]  736 1286  559  688 1564  922  702 1437 1780 1180 1584  539 1001  806  803\n[121]  478  612  565 1505 1324  575 1482  572  983  575 1148  878 1027  942 1339\n[136] 1120  921  618 1679  619   26   90 1252 1011 1376  511  547  558  665  844\n[151] 1268 1871  557  992  613  901  748  618 1198 1096  567 1132 1426 1167 1310\n[166] 1462 1805 1045  378  492  661 1149  897  927 1080  821  920 2294 1411  782\n[181]  811 1537  510  736  521  573 1553 1370 1344  794  507  453 1661 1654  500\n[196]  901  894  768 1730  475  887  614 1100 1527  753 1405  975 1250  827  716\n[211]  492  929 1480 1221  920 1140  376  935 1198  431  758  580 1201 2201  884\n[226]  982  958  531  451 1060  818  802 1618 1922 1606  757  945  777 1146  991\n[241]  982  688 1145 1384  203 2486  886 1021 1283 1209 1121  486 1134  686  784\n[256] 1085  967  824  391 1252  640 1988  775 1379  889  674  419  645 1173  834\n[271] 1075  836 2283 1993  368 1338  544 1248 1372  372  476  193  530  933  756\n[286]  282  103  858  866  910 1501 1338  854 1337  607 1156  695  967 1631  947\n[301]  789 1372  620 1788 1085  863  789  704  488  890  295 1069 1307  646 1151\n[316]  912  937 1277 1309  912 1404  966 2266  832  785  750 1066  907 1694  229\n[331] 1516 1815 1692  866  437  714  748  914  605  844 1250  690  826 1105 1080\n[346] 1096  961 1495  916  868 1736 1782 1695  843 2051  852 1196 1207  889 1059\n[361] 1864 1170 1464  972  523  427 1053 1308  812 1062  556  780  401  433  873\n[376]  703  711 1181 1608 2065 1633  536  479  619 1277 1166 1245  170 2319  658\n[391] 1950  522 1330 1506  942  942 1361 1305 1001 1606 1292 1045  798  403  918\n[406] 1200  695 1095  523  755  851  897 1174  625 1185 2224 1137 1713 1289 1238\n[421]  851 1125 1034  622  710  536 1841 1690  751 1318  825  970 1901  965  776\n[436]  870  993 1459 1832 1616 1384 1133 1666 1254  889 1897 1462 1241  469  994\n[451] 1445  745 1849  350 1524  500  723  509 1158  955  638 2051 1116  580 1341\n[466]  984 1263  618  786  871 1053  917  969  993  465  810  238 1101 1672 1243\n[481]  975  487 1162 1588 1316  830 1706 1622 1136 1263  764 2339 1230 1908 1522\n[496] 2502  463 1547 1886 1224  934 1374 1888 1183  684 1145 2033 1491  746  723\n[511] 1134 2189  394 1122 1596 1060   64 1458 1638 1361  860 1155  923 1163 1693\n[526] 1166 1198 1871  777  621 1201 2353  668  876  893 1709 1006 1025  382 1248\n[541] 1447 1779 1115   19  668   52  725 3240 1123  916 1065  759 1210  809 1336\n[556]  303  271  800  605 1183 1667  561  611 1197   21  645\n\n# Check if the row sums of the aggregated categories match the constraints for sex\nrowSums(ind_agg2[, 16:17]) == rowSums(cons[, 16:17])\n\n  [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [13]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [25]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [37]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [49]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [61]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [73]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [85]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [97]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[109]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[121]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[133]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[145]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[157]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[169]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[181]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[193]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[205]  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[217]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[229]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[241]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[253]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[265]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[277]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE\n[289]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[301]  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[313]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[325]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[337]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n[349]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[361]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[373]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[385]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[397]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[409]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[421]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[433]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[445]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[457]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[469] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[481]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[493]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE\n[505]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[517]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE\n[529]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[541]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[553]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE\n[565]  TRUE  TRUE"
  },
  {
    "objectID": "smsm.html#third-iteration-of-ipf-and-final-validation",
    "href": "smsm.html#third-iteration-of-ipf-and-final-validation",
    "title": "Spatial Microsimulation for Middlesex County, NJ",
    "section": "Third Iteration of IPF and Final Validation",
    "text": "Third Iteration of IPF and Final Validation\n\n# Third iteration of IPF to adjust weights based on sex, age, and education constraints\nfor(j in 1:n_zone){\n  for(i in 1:(n_sex + n_age + n_edu)){\n    index &lt;- ind_cat[, i] == 1\n    if(ind_agg2[j, i] != 0) {  # Check to avoid division by zero\n      weights3[index, j] &lt;- weights2[index, j] * cons[j, i] / ind_agg2[j, i]\n    }\n  }\n}\n# Display the adjusted weights after the third iteration\nhead(as.data.frame(weights3))\n\n\n  \n\n\n# Aggregate individual categories after the third IPF iteration\nfor(i in 1:n_zone){\n  ind_agg3[i, ] &lt;- colSums(ind_cat * weights3[, i])\n}\n# Display the aggregated individual categories after the third iteration\nhead(as.data.frame(ind_agg3))\n\n\n  \n\n\n# Calculate and display the row sums of the aggregated categories for education\nrowSums(ind_agg3[, 18:24])\n\n  [1] 1031 1435  946 1615  520  117 1381  629 2265  736 1602  954 1022 1367  823\n [16]  819  629 1493 1280 1523  450  710 1371 1964 1203  942 1166  431 1552 1333\n [31] 1704  503  987  541 1271 1211  388 1457 2439  511 1124  744 1110  494 1654\n [46]  964 1126  579  962 1253  741 1704  856  877  717  458  460 2395  581 1553\n [61] 1861  610 1007 1330  825 1734  886  449  993 1658  850 1244  914  693 1184\n [76]  812 1200 1809  733  888 1051 1140 1476 1453 1043 1184 1050  628  837 1131\n [91]  665  387 1449  719  435  838  634 1193 1368  760  478   61 2161  820 1184\n[106]  736 1286  559  688 1564  922  702 1437 1780 1180 1584  539 1001  806  803\n[121]  478  612  565 1505 1324  575 1482  572  983  575 1148  878 1027  942 1339\n[136] 1120  921  618 1679  619   26   90 1252 1011 1376  511  547  558  665  844\n[151] 1268 1871  557  992  613  901  748  618 1198 1096  567 1132 1426 1167 1310\n[166] 1462 1805 1045  378  492  661 1149  897  927 1080  821  920 2294 1411  782\n[181]  811 1537  510  736  521  573 1553 1370 1344  794  507  453 1661 1654  500\n[196]  901  894  768 1730  475  887  614 1100 1527  753 1405  975 1250  827  716\n[211]  492  929 1480 1221  920 1140  376  935 1198  431  758  580 1201 2201  884\n[226]  982  958  531  451 1060  818  802 1618 1922 1606  757  945  777 1146  991\n[241]  982  688 1145 1384  203 2486  886 1021 1283 1209 1121  486 1134  686  784\n[256] 1085  967  824  391 1252  640 1988  775 1379  889  674  419  645 1173  834\n[271] 1075  836 2283 1993  368 1338  544 1248 1372  372  476  193  530  933  756\n[286]  282  117  858  866  910 1501 1338  854 1337  607 1156  695  967 1631  947\n[301]  789 1372  620 1788 1085  863  789  704  488  890  295 1069 1307  646 1151\n[316]  912  937 1277 1309  912 1404  966 2266  832  785  750 1066  907 1694  229\n[331] 1516 1815 1692  866  437  714  748  914  605  844 1250  690  826 1105 1080\n[346] 1096  961 1495  916  868 1736 1782 1695  843 2051  852 1196 1207  889 1059\n[361] 1864 1170 1464  972  523  427 1053 1308  812 1062  556  780  401  433  873\n[376]  703  711 1181 1608 2065 1633  536  479  619 1277 1166 1245  170 2319  658\n[391] 1950  522 1330 1506  942  942 1361 1305 1001 1606 1292 1045  798  403  918\n[406] 1200  695 1095  523  755  851  897 1174  625 1185 2224 1137 1713 1289 1238\n[421]  851 1125 1034  622  710  536 1841 1690  751 1318  825  970 1901  965  776\n[436]  870  993 1459 1832 1616 1384 1133 1666 1254  889 1897 1462 1241  469  994\n[451] 1445  745 1849  350 1524  500  723  509 1158  955  638 2051 1116  580 1341\n[466]  984 1263  618  786  871 1053  917  969  993  465  810  238 1101 1672 1243\n[481]  975  487 1162 1588 1316  830 1706 1622 1136 1263  764 2339 1230 1908 1522\n[496] 2502  463 1547 1886 1224  934 1374 1888 1183  684 1145 2033 1491  746  723\n[511] 1134 2189  394 1122 1596 1060   64 1458 1638 1361  860 1155  923 1163 1693\n[526] 1166 1198 1871  777  621 1201 2353  668  876  893 1709 1006 1025  382 1248\n[541] 1447 1779 1115   24  668   52  725 3240 1123  916 1065  759 1210  809 1336\n[556]  303  271  800  605 1183 1667  561  611 1197   21  645\n\n# Calculate and display the row sums of the constraints for education\nrowSums(cons[, 18:24])\n\n  [1] 1031 1435  946 1615  520  117 1381  629 2265  736 1602  954 1022 1367  823\n [16]  819  629 1493 1280 1523  450  710 1371 1964 1203  942 1166  431 1552 1333\n [31] 1704  503  987  541 1271 1211  388 1457 2439  511 1124  744 1110  494 1654\n [46]  964 1126  579  962 1253  741 1704  856  877  717  458  460 2395  581 1553\n [61] 1861  610 1007 1330  825 1734  886  449  993 1658  850 1244  914  693 1184\n [76]  812 1200 1809  733  888 1051 1140 1476 1453 1043 1184 1050  628  837 1131\n [91]  665  387 1449  719  435  838  634 1193 1368  760  478   23 2161  820 1184\n[106]  736 1286  559  688 1564  922  702 1437 1780 1180 1584  539 1001  806  803\n[121]  478  612  565 1505 1324  575 1482  572  983  575 1148  878 1027  942 1339\n[136] 1120  921  618 1679  619   26   90 1252 1011 1376  511  547  558  665  844\n[151] 1268 1871  557  992  613  901  748  618 1198 1096  567 1132 1426 1167 1310\n[166] 1462 1805 1045  378  492  661 1149  897  927 1080  821  920 2294 1411  782\n[181]  811 1537  510  736  521  573 1553 1370 1344  794  507  453 1661 1654  500\n[196]  901  894  768 1730  475  887  614 1100 1527  753 1405  975 1250  827  716\n[211]  492  929 1480 1221  920 1140  376  935 1198  431  758  580 1201 2201  884\n[226]  982  958  531  451 1060  818  802 1618 1922 1606  757  945  777 1146  991\n[241]  982  688 1145 1384  203 2486  886 1021 1283 1209 1121  486 1134  686  784\n[256] 1085  967  824  391 1252  640 1988  775 1379  889  674  419  645 1173  834\n[271] 1075  836 2283 1993  368 1338  544 1248 1372  372  476  193  530  933  756\n[286]  282  103  858  866  910 1501 1338  854 1337  607 1156  695  967 1631  947\n[301]  789 1372  620 1788 1085  863  789  704  488  890  295 1069 1307  646 1151\n[316]  912  937 1277 1309  912 1404  966 2266  832  785  750 1066  907 1694  229\n[331] 1516 1815 1692  866  437  714  748  914  605  844 1250  690  826 1105 1080\n[346] 1096  961 1495  916  868 1736 1782 1695  843 2051  852 1196 1207  889 1059\n[361] 1864 1170 1464  972  523  427 1053 1308  812 1062  556  780  401  433  873\n[376]  703  711 1181 1608 2065 1633  536  479  619 1277 1166 1245  170 2319  658\n[391] 1950  522 1330 1506  942  942 1361 1305 1001 1606 1292 1045  798  403  918\n[406] 1200  695 1095  523  755  851  897 1174  625 1185 2224 1137 1713 1289 1238\n[421]  851 1125 1034  622  710  536 1841 1690  751 1318  825  970 1901  965  776\n[436]  870  993 1459 1832 1616 1384 1133 1666 1254  889 1897 1462 1241  469  994\n[451] 1445  745 1849  350 1524  500  723  509 1158  955  638 2051 1116  580 1341\n[466]  984 1263  618  786  871 1053  917  969  993  465  810  238 1101 1672 1243\n[481]  975  487 1162 1588 1316  830 1706 1622 1136 1263  764 2339 1230 1908 1522\n[496] 2502  463 1547 1886 1224  934 1374 1888 1183  684 1145 2033 1491  746  723\n[511] 1134 2189  394 1122 1596 1060   64 1458 1638 1361  860 1155  923 1163 1693\n[526] 1166 1198 1871  777  621 1201 2353  668  876  893 1709 1006 1025  382 1248\n[541] 1447 1779 1115   19  668   52  725 3240 1123  916 1065  759 1210  809 1336\n[556]  303  271  800  605 1183 1667  561  611 1197   21  645\n\n# Check if the row sums of the aggregated categories match the constraints for education\nrowSums(ind_agg3[, 18:24]) == rowSums(cons[, 18:24])\n\n  [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [13]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [25]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [37]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [49]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [61]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [73]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [85]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [97]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[109]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[121]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE\n[133]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE\n[145]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[157]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[169]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[181]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[193]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[205]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[217]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[229]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[241]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[253]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[265]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[277]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE\n[289]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[301]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[313]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[325]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[337]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[349]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[361]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[373]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[385]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[397]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[409]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[421]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[433] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[445]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[457]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[469]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[481]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE\n[493]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE\n[505]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE\n[517]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[529]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[541]  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[553]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[565]  TRUE FALSE"
  },
  {
    "objectID": "smsm.html#correlation-analysis-between-aggregated-data-and-constraints",
    "href": "smsm.html#correlation-analysis-between-aggregated-data-and-constraints",
    "title": "Spatial Microsimulation for Middlesex County, NJ",
    "section": "Correlation Analysis Between Aggregated Data and Constraints",
    "text": "Correlation Analysis Between Aggregated Data and Constraints\n\n# Function to convert matrix to numeric vector\nvec &lt;- function(x) as.numeric(as.matrix(x))\n\n# Calculate and display the correlation between the initial aggregated data and constraints\ncor(vec(ind_agg0), vec(cons))\n\n[1] 0.723838\n\n# Calculate and display the correlation between the first iteration aggregated data and constraints\ncor(vec(ind_agg1), vec(cons))\n\n[1] 0.9052638\n\n# Calculate and display the correlation between the second iteration aggregated data and constraints\ncor(vec(ind_agg2), vec(cons))\n\n[1] 0.9197018\n\n# Calculate and display the correlation between the third iteration aggregated data and constraints\ncor(vec(ind_agg3), vec(cons))\n\n[1] 0.9967264"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Resource List - RUCI LAB",
    "section": "",
    "text": "CPS & HPS Data distribution Visualizations\nNotebook\n\n\nSpatial Microsimulation using the Household Pulse Survey & American Community Survey\nR markdown notebook\n\n\nLiterature Review (Use of Big Data & ML in Public Transport)\nSheet link\n\n\nOrdinal Regression Models (for Teleworking Days) using Household Pulse Survey\nEDA performed on the dataset\n\n\nData Dictionary (CDC, EPA, USGS)\nGo to dictionary\n\n\nMaps on Felt\n\nNew Brunswick Area Map Go to map\nJersey City Area Map Go to map\n\n\n\nBox Link\nGo to box"
  },
  {
    "objectID": "cps_visualizations.html",
    "href": "cps_visualizations.html",
    "title": "CPS & HPS data distribution visualizations",
    "section": "",
    "text": "Code\nimport os\nimport base64\nimport plotly.graph_objects as go\n\n# Directory containing images\nimage_folder = 'cps_plots_folder'\nimage_files = [f for f in os.listdir(image_folder) if f.endswith('.png')]\n\n# Function to convert image to base64\ndef image_to_base64(image_path):\n    with open(image_path, \"rb\") as image_file:\n        return base64.b64encode(image_file.read()).decode('utf-8')\n\n# Convert all images to base64 strings\nimage_sources = [f\"data:image/png;base64,{image_to_base64(os.path.join(image_folder, img))}\" for img in image_files]\n\n# Define figure\nfig = go.Figure()\n\n# Add traces for each image and use visible=False initially except the first\nfor idx, image_src in enumerate(image_sources):\n    fig.add_trace(\n        go.Image(\n            source=image_src,\n            visible=(idx == 0)  # Only the first image is visible by default\n        )\n    )\n\n# Create dropdown options to toggle visibility of images\ndropdown_buttons = [\n    dict(\n        label=image_files[idx],\n        method=\"update\",\n        args=[\n            {\"visible\": [i == idx for i in range(len(image_sources))]},  # Show only the selected image\n            {\"title\": f\"{image_files[idx]}\"}\n        ]\n    )\n    for idx in range(len(image_sources))\n]\n\n# Update layout with dropdown\nfig.update_layout(\n    updatemenus=[\n        dict(\n            buttons=dropdown_buttons,\n            direction=\"down\",\n            showactive=True,\n            x=0.01,\n            y=1.15,\n            xanchor=\"left\",\n            yanchor=\"top\"\n        )\n    ],\n    title=\"Interactive Plot Viewer with Dropdown\",\n    title_x=0.5\n)\n\n# Display the figure\nfig.show()"
  }
]